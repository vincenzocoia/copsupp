% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fvinesim.R
\name{fvinesim}
\alias{fvinesim}
\title{Friendly vine simulation}
\usage{
fvinesim(n, A, cops, cpars, iprint = FALSE)
}
\arguments{
\item{n}{Number of observations to generate}

\item{A}{Vine array matrix, possibly truncated.}

\item{cops}{Upper-triangular matrix of copula names (like "frk" or "gum"),
corresponding to the edges in vine array \code{A}. Or, a single name
if it applies to all edges in \code{A}, or a vector of length
\code{nrow(A)-1} where entry \code{i} corresponds to edges in row \code{i}
of \code{A}.}

\item{cpars}{Matrix of copula parameters, with entries corresponding to
entries in \code{cops}. Optionally, if only one copula is being fit for
the entire vine, could be the copula parameter (a vector).}

\item{iprint}{Logical, as in \code{\link{rvinesimvec2}}, which says
"print flag for intermediate results".}
}
\description{
A (hopefully) user-friendly function to simulate from a vine copula.
Essentially a wrapper
for \code{\link{rvinesimvec2}}. (**Doesn't yet work for truncated vines,
because I can't figure out how to do truncated vines using
\code{\link{rvinesimvec2}})
}
\details{
To truncate a vine array, use \code{\link{trunc.varray}}.

To make a matrix of copulas, use \code{\link{makeuppertri}}. Some copula
parameters may have more or less parameters than 1 -- in this case,
enlist the help of \code{\link{makeuppertri.list}}.

To name the copulas, use the names as in the CopulaModel package. For
example, "Frank" is \code{"frk"}, and "Gumbel" is \code{"gum"}.
}
\note{
Like in \code{\link{rvinesimvec2}}, the copula families are assumed to be
permutation symmetric.
}
\examples{
## Vine array:
A <- CopulaModel::Dvinearray(5)
A <- relabel.varray(A, c(3, 5, 1, 2, 4))

## Simulate 10 observations with Frank copulas:
set.seed(123)
fvinesim(10, A, cops="frk", cpars=2)

## Same thing, but 2-truncated:
A <- trunc.varray(A, 2)
set.seed(123)
fvinesim(10, A, cops="frk", cpars=2)
## Notice that variables 3,5,1 -- the first three generated --- are the same
##  as the complete vine, since they are only linked by 2 trees anyways.

## One more with slightly more specifications:
A <- truncvarray(Cvinearray(4), 2)
copmat <- makeuppertri(c("gum", "gal", "bvtcop",
                         "bvncop", "frk"), row = 2, col = 4, blanks = "")
cparmat <- makeuppertri.list(c(1.5, 1.5, 0.9, 3, 0.1, 0.5),
                             len = c(1,1,2,1,1), row = 2, col = 4)
fvinesim(10, A, copmat, cparmat)
}

