% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pcond.rvine.R
\name{pcond.rvine}
\alias{pcond.rvine}
\title{Conditional Distribution in a Regular Vine}
\usage{
pcond.rvine(dat, cond, A, copmat, cparmat, FXmarg = identity,
  FYmarg = identity)
}
\arguments{
\item{dat}{vector or matrix of observations (columns are variables).}

\item{cond}{Integer; the variable you wish to condition on (i.e. the
column number of \code{dat}).}

\item{A}{Vine array matrix, possibly truncated.
Variables should be labelled to correspond to
the order they appear in \code{dat}, not so that
they match the column number.}

\item{copmat}{Upper triangular matrix of copula names corresponding to
the edges in \code{A}.}

\item{cparmat}{Upper triangular matrix of copula parameters
corresponding to the copula families in \code{copmat}.}

\item{FXmarg}{List of (univariate) marginal cdfs of X_1, ..., X_p;
each should be vectorized. Or a single function if the cdf is all the same.}

\item{FYmarg}{Marginal cdf of Y, vectorized.}
}
\description{
Evaluates the conditional distribution of a variable in a regular vine,
given values of the other variables.
}
\details{
This function could do one of two things, depending on the
scenario.

\itemize{
 \item If variable \code{cond} is not a leaf (that is, a vine array cannot
 be written with it at the end), then the conditional density is integrated.
 \item If variable \code{cond} is a leaf, then Bo's
 \code{rVineTruncCondCDF} function in the \code{copreg} package is
 used to compute the conditional cdf.
}
}

