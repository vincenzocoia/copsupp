% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/reform.copmat.R
\name{reformcopmat}
\alias{reformcopmat}
\title{Rearrange the Matrices following Rearrangement of Vine Array}
\usage{
reformcopmat(mat, Anew, Aold)
}
\arguments{
\item{mat}{Old matrix to rearrange, such as a copula matrix or copula
parameter matrix. Should be upper-triangular, with nrows = truncation number,
ncols = vine dimension.}

\item{Anew}{The new vine array index, possibly truncated. Could have
less variables and more truncation than \code{Aold}.}

\item{Aold}{The old vine array index, possibly truncated.}
}
\value{
A matrix that's possibly subsetted and/or rearranged from \code{mat}.
}
\description{
If you changed the order of your vine array, this function will
convert other matrices associated with the original vine array
(such as copula matrix or copula parameter matrix)
into new matrices associated with the new vine array.
}
\note{
Make sure that the variables in \code{Aold}
and \code{Anew} have the same labels.
}
\examples{
## Originally...
A <- truncvarray(Cvinearray(4), 2)
copmat <- makeuppertri(c("gum", "gal", "bvtcop",
                         "bvncop", "frk"), row = 2, col = 4, blanks = "")
cparmat <- makeuppertri.list(c(2, 3, 0.9, 4, 0.1, 0.5),
                             len = c(1,1,2,1,1), row = 2, col = 4)

## Obtain new vine array by some means:
Anew <- center.varray(A)
## Get new matrices:
reform.copmat(copmat, Anew, A)
reform.copmat(cparmat, Anew, A)

## Try changing the dimension of A
Anew <- rvinesubset(truncvarray(A, 1), c(1,2,3))
reform.copmat(copmat, Anew, A)
reform.copmat(cparmat, Anew, A)
}

