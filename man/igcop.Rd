% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/igcop.R
\name{pcondigcop}
\alias{pcondigcop}
\alias{qcondigcop}
\title{IG Copula Family Functions}
\usage{
pcondigcop(v, u, cpar)

qcondigcop(tau, u, cpar)
}
\arguments{
\item{u, v}{Vectors of values in [0,1] representing values of the first
and second copula variables.}

\item{cpar}{Vector of length 2 corresponding to the copula
parameters \code{theta>0} and \code{k>1}, respectively.}

\item{tau}{Vector of quantile levels in [0,1] to evaluate a quantile function
at.}
}
\value{
Numeric vector of length equal to the length of the input vector(s).
}
\description{
Functions related to the IG copula family, denoted  by \code{'igcop'}.
}
\note{
Inputting two vectors greater than length 1 is allowed, if they're
the same length.
Also, \code{qcondigcop21} and \code{pcondigcop21} are the same as
\code{qcondigcop} and \code{pcondigcop} -- their the distributions of
variable 2 given 1.

Of all the methods of computing qcondigcop() that I tried,
this is the only one that appears to work (validated
visually with the old qcondnew()
function for theta=3 and 30). This version uses the inverse of the
helper function, \code{\link{igcop_helper_inv}}, but deliberately
inefficiently by evaluating each helper function at all the taus, just
because the inverse seems to work better that way.
}

