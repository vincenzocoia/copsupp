% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate.mv.R
\name{integrate.mv}
\alias{integrate.mv}
\title{Multivariate Integration}
\usage{
integrate.mv(f, lower, upper, stop.on.error = FALSE, ...)
}
\arguments{
\item{f}{Function that takes a vector and returns a numeric.}

\item{lower, }{upper Vector of the limits of integration for
each variable entered into \code{f}. Can be infinite.}

\item{stop.on.error}{Logical (an argument of \code{\link{integrate}}) --
should function be stopped if an "error" occurs?}

\item{...}{Other arguments to pass into \code{\link{integrate}}.}
}
\value{
A numeric value of the integral. The other information
outputted by the \code{\link{integrate}} function are ignored.

If the length of the limit vectors is zero, it will be assumed that
\code{f} has no arguments, so \code{f()} will be returned.
returned.
}
\description{
Integrate a multivariate function (R^p -> R).
}
\details{
This function recursively integrates the arguments in \code{f}
using the \code{\link{integrate}} function.

It's reasonably fast
when \code{f} takes two variables, and slow when \code{f} takes 3 variables.
For 4 or more, perhaps look into alternative approaches.

If you're support is finite, you're better off using
\code{\link{cubature::adaptIntegrate}}.
}
\note{
Only a rectangular support is allowed.

This function could probably be improved if some of the support is finite,
in which case somehow \code{\link{cubature::adaptIntegrate}} could be
leveraged somehow.

The \code{stop.on.error} argument is defaulted to \code{FALSE}
instead of \code{\link{integrate}}'s \code{TRUE} because sometimes
it'll think the integral is divergent when it's really not.
}
\examples{
pdf <- function(x) prod(dnorm(x))
integrate.mv(pdf, -Inf, Inf)
integrate.mv(pdf, c(-Inf, -Inf), c(Inf, Inf))
}
