% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_lims.R
\name{eval_lims}
\alias{eval_lims}
\title{Evaluate a function at limit points}
\usage{
eval_lims(fun, arg, replx, replf)
}
\arguments{
\item{fun}{Vectorized univariate function that you want to evaluate. Need not
evaluate to anything at points \code{replx}.}

\item{arg}{Vector of values to evaluate the function \code{fun} at.}

\item{replx}{Vector of values for which to manually evaluate the function
\code{fun} at.}

\item{replf}{Vector of values for which you want \code{replx} to evaluate to.}
}
\value{
Vector of evaluations of the function \code{fun} at \code{arg}.
}
\description{
Sometimes evaluating a function in R at limit points does not give
the proper limit. \code{eval_lims} manually evaluates the
desired function values at those limit points, and evaluates the function
normally otherwise.
}
\note{
Any \code{NA}'s that appear in \code{arg} will be returned as
\code{NA}.
}
\examples{
## The function we want to evaluate, and some arguments:
fun <- function(x) exp(-1/x)/x
arg <- c(0:5, NA)

## Should have fun(0)=0, but we get NaN:
fun(arg)

## Manually evaluate:
eval_clean(fun, arg, replx=0, replf=0)

## NaN and numeric(0) work as arguments too:
eval_clean(fun, numeric(0), replx=0, replf=0)
eval_clean(fun, NaN, replx=0, replf=0)
}

