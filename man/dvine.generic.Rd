% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dvine.R
\name{pcondD.generic}
\alias{pcondD.generic}
\alias{qcondD.generic}
\title{Conditional D-Vine Distribution: Generic variables}
\usage{
pcondD.generic(x, i, num, copmat, cparmat, Fmarg)

qcondD.generic(tau, x, i, num, copmat, cparmat, Fmarg, Qi_marg)
}
\arguments{
\item{x}{vector containing at least the values of rv's \eqn{X_i} to \eqn{X_{i+num}},
where the position in the vector matches the variable index (i.e. i,...,i+n).}

\item{i}{integer index of unconditioned variable (\eqn{X_i}).}

\item{num}{integer; number of variables directly upstream or downstream
of X_i to condition on. For upstream (i+1, i+2, ...), make
\code{sign(num)>0}; for downstream (i-1, i-2, ...), make \code{sign(num)<0}.}

\item{copmat}{Upper triangular \code{(num trees)x(i+num)} matrix of
copula names (like "frk" and "gum") as strings. Rows correspond to tree
depth in the vine; columns correspond to the edges in that tree (in the order
of the D-vine, i.e. "left to right").}

\item{cparmat}{Upper triangular matrix of copula parameters corresponding
to the copula families in \code{copmat}.}

\item{Fmarg}{List of marginal distributions (univariate functions),
whose position in the list corresponds to the variable index.
Must contain at least those marginals i:(i+n).}

\item{tau}{The quantile index}

\item{Qi_marg}{Marginal quantile function of X_i (univariate function)}
}
\value{
A single numeric value representing the evaluated conditional
cdf or quantile function.
}
\description{
For the vine X_1--X_2--X_3--..., these functions return the joint cdf or
quantile function of X_i given the \code{num} variables either above or
below X_i in the vine. Meant primarily for internal use.
}
\details{
The copulas link (downstream variable, upstream variable), not
the other way around. This doesn't make a difference if the copula is "U-V"
symmetric.
}
\note{
You might want to load the CopulaModel package to load the
copula families.
}
\examples{
## Joint distribution info
library(CopulaModel)
copmat <- makeuppertri("frk", 5, 5)
cparmat <- makeuppertri(1:10, 5, 5)
Fmarg <- list(pnorm, pnorm, pnorm, pnorm, pnorm)

## cdf of X1|X2,...,X5 at -2|-1:2, with 2-truncation:
pcondD.generic(-2:2, 1, 4, copmat[1:2, ], cparmat[1:2, ], Fmarg)

## cdf of X4|X2,X3 at 0|1,1:
pcondD.generic(c(NA, 1, 1, 0), 4, -2, copmat, cparmat, Fmarg) # X_1 value doesn't matter.
## 0.6-quantile of X1|(X2,...,X5)=(2,2,2,2).
qcondD.generic(0.6, c(NA, 2, 2, 2, 2), 1, 4, copmat, cparmat, Fmarg, qnorm)

## 0.5-quantile of X2|(X3,X4)=(1,1). Notice only the 3rd and 4th positions
##  in the x vector matters.
qcondD.generic(0.5, c(NA, 2, 1, 1, 99), 2, 2, copmat, cparmat, Fmarg, qnorm)
}

